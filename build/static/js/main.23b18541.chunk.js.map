{"version":3,"sources":["component/Sidebar.js","component/UserProfile.js","component/DisplayStatTrendCard.js","component/DisplayStatCard.js","component/azure.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Sidebar","react","className","menu","theme","defaultSelectedKeys","mode","Item","key","icon","type","title","React","UserProfile","react_default","a","createElement","avatar","style","backgroundColor","Component","DisplayStatTrendCard","row","gutter","col","span","statistic","value","precision","es_button","marginTop","DisplayStatCard","background","padding","card","valueStyle","color","prefix","suffix","Azure","UserProfile_UserProfile","DisplayStatTrendCard_DisplayStatTrendCard","DisplayStatCard_DisplayStatCard","Header","Layout","Footer","Sider","Content","App","layout","minHeight","Sidebar_Sidebar","margin","azure_Azure","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23b18541.chunk.js","sourcesContent":["import {Menu, Icon, Button, Sider} from 'antd';\nimport * as React from 'react';\nconst SubMenu = Menu.SubMenu;\n\nexport default class Sidebar extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                    <Menu.Item key=\"1\">\n                        <Icon type=\"pie-chart\" />\n                        <span>Option 1</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Icon type=\"desktop\" />\n                        <span>Option 2</span>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={<span><Icon type=\"user\" /><span>User</span></span>}\n                    >\n                        <Menu.Item key=\"3\">Tom</Menu.Item>\n                        <Menu.Item key=\"4\">Bill</Menu.Item>\n                        <Menu.Item key=\"5\">Alex</Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={<span><Icon type=\"team\" /><span>Team</span></span>}\n                    >\n                        <Menu.Item key=\"6\">Team 1</Menu.Item>\n                        <Menu.Item key=\"8\">Team 2</Menu.Item>\n                    </SubMenu>\n                    <Menu.Item key=\"9\">\n                        <Icon type=\"file\" />\n                        <span>File</span>\n                    </Menu.Item>\n                </Menu>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport {Avatar} from \"antd\";\n\nexport default class UserProfile extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"UserProfile\">\n                <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                <div className='UserName'>Bob Alex</div>\n                <div className='Rank'>Level 2</div>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {Avatar, Button, Col, Row, Statistic} from \"antd\";\n\nexport default class DisplayStatTrendCard extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"StatTrend\">\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Statistic title=\"Active Users\" value={112893} />\n                    </Col>\n                    <Col span={12}>\n                        <Statistic title=\"Account Balance (CNY)\" value={112893} precision={2} />\n                        <Button style={{ marginTop: 16 }} type=\"primary\">Recharge</Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\n","import { Statistic, Card, Row, Col, Icon } from 'antd';\n\nimport React, { Component } from 'react';\nimport {Avatar} from \"antd\";\n\nexport default class DisplayStatCard extends React.Component {\n\n\n\nrender(){\n    return(\n        <div style={{ background: '#ECECEC', padding: '30px' }}>\n        <Row gutter={16}>\n            <Col span={12}>\n                <Card>\n                    <Statistic\n                        title=\"Active\"\n                        value={11.28}\n                        precision={2}\n                        valueStyle={{ color: '#3f8600' }}\n                        prefix={<Icon type=\"arrow-up\" />}\n                        suffix=\"%\"\n                    />\n                </Card>\n            </Col>\n            <Col span={12}>\n                <Card>\n                    <Statistic\n                        title=\"Idle\"\n                        value={9.3}\n                        precision={2}\n                        valueStyle={{ color: '#cf1322' }}\n                        prefix={<Icon type=\"arrow-down\" />}\n                        suffix=\"%\"\n                    />\n                </Card>\n            </Col>\n        </Row>\n    </div>);\n    }\n}","import * as React from 'react';\nimport UserProfile from \"./UserProfile\";\nimport DisplayStatTrendCard from \"./DisplayStatTrendCard\";\nimport DisplayStatCard from \"./DisplayStatCard\";\n\n\nexport default class Azure extends React.Component {\n  render(){\n    return (\n        <div>\n          <UserProfile/>\n          <DisplayStatTrendCard/>\n          <DisplayStatCard/>\n      <div className='azure-title'>Welcome to Chat Improve</div>\n\n    </div>);\n  }\n}\n","import React, { Component } from 'react';\nimport Sidebar from './component/Sidebar';\nimport './App.css';\nimport Azure from './component/azure.js';\nimport {Breadcrumb, Layout, Menu} from \"antd\";\nconst {\n    Header, Footer, Sider, Content,\n} = Layout;\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Layout style={{ minHeight: '100vh' }}>\n              <Sider\n\n              >\n                <Sidebar/>\n              </Sider>\n              <Layout>\n                  <Header style={{ background: '#fff', padding: 0 }} />\n                  <Content style={{ margin: '0 16px' }}>\n                    <Azure/>\n                  </Content>\n                  <Footer style={{ textAlign: 'center' }}>\n                      Ant Design Â©2018 Created by Ant UED\n                  </Footer>\n              </Layout>\n          </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}